require "db"

USER_NAME = 'postgres'
PG = DB.open("postgres", String.fmt("user=%s dbname=goby_test sslmode=disable", USER_NAME))

PG.run("create table if not exists list_items (
  id   serial primary key,
  title varchar(40),
  checked boolean
)")

class ListItem
  attr_reader :id, :title, :checked
  
  def initialize(params)
    @id      ||= params[:id]
    @title   ||= params[:title]
    @checked ||= params[:checked] || 0
  end

  def destroy
    ListItem.db.exec('DELETE FROM list_items WHERE id = $1', @id)
  end

  def self.db
    PG
  end

  def self.all
    self.db.query("SELECT * FROM list_items")
  end

  def self.find(id)
    self.db.query("SELECT * FROM list_items WHERE id = $1", id)
  end

  def self.create(params = {})
    validates(params) do |result|
      if result[:error]
        return result
      else
        title   = params[:title]
        checked = params[:checked].to_i == 1
        resultID = self.db.exec(String.fmt("INSERT INTO list_items (title, checked) VALUES ('%s', %s)", title, checked))
        new({ id: resultID, title: title, checked: checked })
      end
    end
  end

  def self.validates(params)
    if params[:title].nil? || params[:title].empty?
      yield({ error: 'Title cannot be empty' })
    else
      yield({ error: nil })
    end
  end
end

# db.exec("INSERT INTO users (name, age) VALUES ('Stan', 23)")
# results = db.query("SELECT * FROM users")
# results.count

# puts results
# puts results.count
